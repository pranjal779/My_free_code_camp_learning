Mnemonic Variable Name -Python

string conversion

User input

onverting User Input 16:18

Conditional Execution
	comparsion IF

	One-Way Decisions (3:50)

	Indentation

	Tabs (5:41)

	9:32

	Nested Decisions (10:29)

	Two-way Decisions (11:05)

Conditional Execution B
	Multi-way

	The try / execpt Structure

functions

	stored and reused steps

	python Functions

	new reserved words

	max functions

	Type Conversions

	String Conversions

what is the purpose of the def keyword in python?
It indicates the start of a function, and the following indented section of code is to be stored for later.

Return Values

	Building our Own Functions

	define a function + invoke a function + reuse it

	Arguments

	Parameters

	Return Values (Return Statement)
	
	Arguments, Parameters and Results

	Multiple Parameter / Arguments

Loops and Iteration - Chapter 5 

	....
	Finishing an Iteration with continue

	
	indefinite loops

Definite loops

	Definite loop with strings

Iterations: Loop Idioms

chapter 6: strings

..
..

String Comparison	


Files as a Sequence

ch 8 Python Lists:
	Looking Inside Lists
	lists are mutable
	len()
	range()
	
Working with lists:
	List Methods
	is something in the list (in {or} not in)
	list are in orders - sort()
	Built-in Functions and lists
		-len()
		-max()
		-min()
		-sum()
		-sum(nums)/len(nums)

strings and Lists:

	----
	What does n equal in this code?

	words = 'His e-mail is q-lar@freecodecamp.org'
	pieces = words.split()
	parts = pieces[3].split('-')
	n = parts[1]

	mail


	q


	lar


	lar@freecodecamp.org
	----

	split()
	
	

	The .startswith function used in chapter 8C works better than the != 	to prevent the traceback. you can put the compound conditional in any order with .startswith and it will work.

	rawfile=open('mbox-short.txt')
	for iteration in rawfile:
	    iteration=iteration.rstrip()
	    split=iteration.split()
	    if not iteration.startswith("From") or len(split)<3:
	        continue
	    print(split[2])


How to debug or bug testing while coding check the ex8-1 ... .py files for context


___

Python Dictionaries

Dictionaries: Common Applications



